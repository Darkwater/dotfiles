#!/usr/bin/fish


# DEPENDENCIES:
#
#   fish            - to run the script
#   scp             - to upload the file to a remote server
#   maim            - capture screenshots
#   ffmpeg          - record video
#   slop            - for area selection
#   feh             - for delayed area selection
#   xrandr          - getting information about the screen
#   and of course the GNU coreutils such as cp, mv, date, etc.
#
# ARGUMENTS:
#   
#   first argument  - type of media to capture
#       image       - capture a screenshot (DEFAULT)
#       video       - record a video
#       gif         - record a gif
#
#   second argument - area to record
#       screen      - capture the entire screen (DEFAULT)
#       area        - select an area to capture
#       later       - IMAGE ONLY: capture entire screen first, select area later
#
#   third argument  - what to do with the media
#       upload      - upload using scp
#       save        - save in the specified directory
#
# KNOWN BUGS:
#
#   - It probably won't work well with multiple X displays. (Multiple monitors should work.)

##%  SETTINGS  %##

set image_ext 'png'
set video_ext 'webm'
set name_format '%N'
set slop_args -nkb -b=10 -c=1,0.68,0 -b=1

set destination 'nv:/var/www/s/'
set local_save '/tmp/'

switch "$argv[2]"
    case 'area'
        set slop_output (slop $slop_args | grep -o '[0-9]*')

        set x "$slop_output[1]"
        set y "$slop_output[2]"
        set width "$slop_output[3]"
        set height "$slop_output[4]"

    case 'screen' 'later' '*'
        set x 0
        set y 0
        
        set xrandr_output (xrandr | head -n 1 | grep -o 'current [0-9 x]*' | grep -o '[0-9]*')

        set width "$xrandr_output[1]"
        set height "$xrandr_output[2]"
end


switch "$argv[1]" 
    case 'image' '*'
        maim -g="$width"x"$height"+"$x"+"$y" /tmp/screen.png

        if test "$argv[2]" = "later"
            # Do some magic shit
        end
end
